version: '3.8'

services:
  # Web application (nginx for static content)
  web:
    image: nginx:alpine
    ports:
      - "${WEB_PORT:-8080}:80"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf:/etc/nginx/conf.d
    networks:
      - frontend
    depends_on:
      - app
    restart: unless-stopped

  # Application server (using Python/Flask as an example)
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-5000}:5000"
    volumes:
      - ./app:/app
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-devdb}
      - REDIS_URL=redis://cache:6379/0
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - cache
    restart: unless-stopped

  # Database (PostgreSQL)
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-devdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - backend
    restart: unless-stopped

  # Cache (Redis)
  cache:
    image: redis:alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped

networks:
  frontend:
  backend:

volumes:
  postgres_data:
  redis_data: